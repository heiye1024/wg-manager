# ---------- deps 阶段 ----------
FROM node:22-alpine AS deps
WORKDIR /app
RUN apk add --no-cache libc6-compat
ENV COREPACK_ENABLE_DOWNLOAD_PROMPT=0
# 复制依赖清单
COPY frontend/package.json frontend/yarn.lock* ./
COPY frontend/tsconfig.json ./
# 启用 Yarn 并安装依赖（默认 Yarn 4）
RUN corepack enable && yarn install --immutable

# ---------- builder 阶段 ----------
FROM node:22-alpine AS builder
WORKDIR /app
ENV COREPACK_ENABLE_DOWNLOAD_PROMPT=0
# 拷贝依赖缓存
#COPY --from=deps /app/.yarn ./.yarn
COPY --from=deps /app/yarn.lock ./yarn.lock
COPY --from=deps /app/package.json ./package.json
COPY --from=deps /app/tsconfig.json ./tsconfig.json
# 拷贝源码
COPY frontend/ ./

# 确保生成 server.js
#RUN echo "export default { output: 'standalone' }" > next.config.mjs
RUN echo "export default { \
  eslint: { ignoreDuringBuilds: true }, \
  output: 'standalone' \
}" > next.config.mjs


RUN corepack enable && yarn build

# ---------- runner 阶段 ----------
FROM node:22-alpine AS runner
WORKDIR /app
ENV NODE_ENV=production
# 拷贝构建产物
COPY --from=builder /app/.next/standalone ./
COPY --from=builder /app/.next/static ./.next/static
COPY --from=builder /app/public ./public
EXPOSE 3000
ENV PORT=3000
CMD ["node", "server.js"]